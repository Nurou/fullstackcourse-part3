{"version":3,"sources":["components/person.js","components/filter.js","components/personForm.js","components/persons.js","services/persons.js","components/notification.js","App.js","index.js"],"names":["Person","_ref","person","deleteEntry","react_default","a","createElement","name","number","onClick","id","Filter","input","newSearch","value","onChange","PersonForm","newContact","nameChange","numberChange","onSubmit","type","Persons","rows","baseUrl","services_persons","axios","get","then","response","data","newObject","post","put","concat","delete","Notification","message","messageType","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","searchInput","setSearchInput","_useState9","_useState10","setMessage","_useState11","_useState12","errorMessage","setErrorMessage","useEffect","personsService","initialNotes","personsToList","filter","regex","RegExp","match","personToDelete","find","window","confirm","catch","error","notification","e","target","personForm","preventDefault","isAlreadyAdded","existingPerson","forEach","toUpperCase","updatedPerson","objectSpread","returnedPerson","map","newPerson","length","setTimeout","console","dir","JSON","parse","stringify","components_persons","components_person","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ac781eb9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = ({ person, deleteEntry }) => {\n  return (\n    <li>\n      {person.name} {person.number}{' '}\n      <button onClick={() => deleteEntry(person.id)}>delete</button>\n    </li>\n  );\n};\n\nexport default Person;\n","import React from 'react';\n\nconst Filter = ({ input, newSearch }) => {\n  return (\n    <div>\n      filter displayed by{' '}\n      <input\n        value={input} //\n        onChange={newSearch}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = ({ newContact, name, number, nameChange, numberChange }) => {\n  return (\n    <form onSubmit={newContact}>\n      <div>\n        name:\n        <input\n          value={name} //\n          onChange={nameChange}\n        />\n        <br />\n        number:\n        <input\n          value={number} //\n          onChange={numberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ rows }) => {\n  return (\n    <div>\n      <ul>{rows()}</ul>\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\n// get: get\nconst getAll = () => {\n  const request = axios.get(baseUrl); // returns promise\n  return request.then(response => response.data);\n};\n// create: post\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject); // returns promise\n  return request.then(response => response.data);\n};\n\n// update: put\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject); // returns promise\n  return request.then(response => response.data);\n};\n\n// remove: delete\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`); // returns promise\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update, remove };\n","import React from 'react';\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={messageType}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport Person from './components/person';\nimport Filter from './components/filter';\nimport PersonForm from './components/personForm';\nimport Persons from './components/persons';\nimport personsService from './services/persons';\nimport Notification from './components/notification';\n\nconst App = () => {\n  // application state pieces\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [message, setMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // initial phonebook retrieval\n  useEffect(() => {\n    personsService.getAll().then(initialNotes => setPersons(initialNotes));\n  }, []);\n\n  // filtering persons based on user search input\n  const personsToList = persons.filter(person => {\n    const regex = new RegExp(searchInput, 'gi');\n    return person.name.match(regex);\n  });\n\n  // persons list objects converted to HTML list elements\n  const rows = () =>\n    personsToList.map(person => (\n      <Person\n        key={person.id} //\n        person={person}\n        deleteEntry={deleteEntry}\n      />\n    ));\n\n  const addContact = e => {\n    // prevent refresh on submit\n    e.preventDefault();\n\n    // flags\n    let isAlreadyAdded = false;\n    let confirmed = true;\n    let existingPerson = '';\n\n    persons.forEach(person => {\n      // case insensitive comparison\n      const existingName = person.name.toUpperCase();\n      const personToAdd = newName.toUpperCase();\n\n      // person already on the books?\n      if (existingName === personToAdd) {\n        existingPerson = person;\n        isAlreadyAdded = true;\n      }\n    });\n\n    if (isAlreadyAdded) {\n      // want to update number?\n      confirmed = window.confirm(`${newName} has already been added to the phonebook,\n         replace the old number with a new one?`);\n      if (confirmed) {\n        const updatedPerson = {\n          ...existingPerson,\n          number: newNumber\n        };\n        personsService\n          .update(existingPerson.id, updatedPerson) //\n          .then(returnedPerson => {\n            setPersons(\n              persons.map(person =>\n                person.id === existingPerson.id ? returnedPerson : person\n              )\n            );\n          });\n      }\n    }\n\n    // create new person object\n    const newPerson = {\n      id: persons.length + 1,\n      name: newName,\n      number: newNumber\n    };\n\n    // create note in db & render returned note\n    personsService\n      .create(newPerson) //\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        // clear inputs\n        setNewNumber('');\n        setNewName('');\n        setMessage(`Added ${returnedPerson.name} `);\n        // message disappears after timeout\n        setTimeout(() => {\n          setMessage(null);\n        }, 2000);\n      })\n      .catch(error => {\n        console.dir(typeof error.response.data.error);\n        setErrorMessage(JSON.parse(JSON.stringify(error.response.data.error)));\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 2000);\n      });\n  };\n\n  // controlling input through state\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleSearchChange = e => {\n    setSearchInput(e.target.value);\n  };\n\n  // deleting a person\n  const deleteEntry = id => {\n    const personToDelete = persons.find(person => person.id === id);\n    const confirmDelete = window.confirm(`Delete ${personToDelete.name}?`);\n    if (confirmDelete) {\n      personsService\n        .remove(id) //\n        .catch(error => {\n          setErrorMessage(\n            `Information of ${\n              personToDelete.name\n            } has already been removed from the server`\n          );\n          setPersons(persons.filter(person => person.id !== id)); // filter deleted person from state\n        });\n      setPersons(persons.filter(person => person.id !== id));\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {<Notification message={message} messageType=\"message\" />}\n      {<Notification message={errorMessage} messageType=\"error\" />}\n\n      <Filter input={searchInput} newSearch={handleSearchChange} />\n      <h2>Add New</h2>\n      <PersonForm\n        newContact={addContact} //\n        name={newName}\n        nameChange={handleNameChange}\n        number={newNumber}\n        numberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons rows={rows} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}